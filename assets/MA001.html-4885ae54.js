import{_ as p,M as e,p as c,q as o,R as n,t as s,N as t,a1 as l}from"./framework-5866ffd3.js";const i={},u=l(`<h1 id="云平台账号管理" tabindex="-1"><a class="header-anchor" href="#云平台账号管理" aria-hidden="true">#</a> 云平台账号管理</h1><h2 id="业务背景" tabindex="-1"><a class="header-anchor" href="#业务背景" aria-hidden="true">#</a> 业务背景</h2><p>云平台管理行业指的是利用云计算技术提供对云平台进行管理和维护的相关服务。这些服务包括了云平台的部署、配置、监控、维护、安全等管理任务。</p><p>云平台管理的目的是提高云平台的可用性、安全性、可靠性和性能，以满足客户的业务需求。通过云平台管理，可以确保云平台的正常运行，并且可以提高云平台的使用效率和满意度。</p><p>云平台管理行业的主要参与者包括云平台提供商和第三方云平台管理服务提供商。云平台提供商通常提供基本的云平台管理功能，而第三方云平台管理服务提供商则提供更为丰富的云平台管理服务，包括了对云平台的高级管理和定制化服务等。</p><h2 id="业务场景" tabindex="-1"><a class="header-anchor" href="#业务场景" aria-hidden="true">#</a> 业务场景</h2><p>作为云平台用户，我希望能统一管理各大云平台的账号信息、使用情况及消费情况等等</p><ul><li>我希望能够在一个平台上管理多个来自不同云平台的账号并监控账号使用情况</li></ul><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h2><p>对上述业务场景进行分析后，从技术的角度，云平台账号管理这一功能可以拆分出以下子功能：</p><ul><li>账号展示：向用户展示所有云平台账号的相关信息（包括云平台、账号名称、创建时间等）；</li><li>账号新增：用户可以新增不同云平台下的账号；</li><li>账号修改：用户可以对已新增的账号信息进行修改；</li><li>账号删除：用户可以删除自己不需要的账号；</li><li>信息校验：对用户填写的云平台账号信息进行校验，另外此系统不同用户的权限也会有校验。</li></ul><p>整个解决方案会添加一个页面组件和两个业务组件，涉及的部分目录结构如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Accounts
├── components
│   ├── AccountsCards.tsx
│   └── AccountsModelForm.tsx
├── hooks
│   └── useRules.tsx
├── index.css
└── index.tsx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中：</p><ul><li><code>AccountsCards</code> 组件是云平台账号展示卡片，负责渲染云平台账号主要信息；</li><li><code>AccountsModelForm</code> 组件是弹窗表单，负责云平台新增修改的信息采集工作；</li></ul><h3 id="功能点一-账号展示" tabindex="-1"><a class="header-anchor" href="#功能点一-账号展示" aria-hidden="true">#</a> 功能点一：账号展示</h3><p>用户往往会有多个不同平台的账号，所以账号卡片关键信息要突出，而且考虑到不同屏幕大小下数据展示的自适应方案，我们这里采用到 antd 的栅格来实现，在不同分辨率下一行展示不同数量的账号</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--Accounts/components/AccountsCards.tsx--&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gutter-row<span class="token punctuation">&quot;</span></span> <span class="token attr-name">xs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{24}</span> <span class="token attr-name">lg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{8}</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{index}</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>account_card<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 账号卡片的内容 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>卡片主体中还有要考虑到的细节点，比如：小屏幕下的文字换行处理，文字长度不确定的文本建议采用<code>antd Text</code>组件实现超出长度显示省略号的效果：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--Accounts/components/AccountsCards.tsx--&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token value css language-css"><span class="token punctuation">{</span><span class="token punctuation">{</span></span></span></span> <span class="token attr-name"><span class="token namespace">width:</span></span> <span class="token attr-name">&quot;calc(100%</span> <span class="token attr-name">-</span> <span class="token attr-name">120px)&quot;</span> <span class="token attr-name">}}</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Text</span>
			<span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token value css language-css"><span class="token punctuation">{</span><span class="token punctuation">{</span></span></span></span> <span class="token attr-name"><span class="token namespace">fontSize:</span></span> <span class="token attr-name">21,</span> <span class="token attr-name"><span class="token namespace">fontWeight:</span></span> <span class="token attr-name">500</span> <span class="token attr-name">}}</span>
			<span class="token attr-name">ellipsis</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{{</span> <span class="token attr-name"><span class="token namespace">tooltip:</span></span> <span class="token attr-name">item.account</span> <span class="token attr-name">}}</span>
		<span class="token punctuation">&gt;</span></span>
			{item.account}
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Text</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">为什么要封装账号卡片？</p><p>封装账号卡片的目的主要是让代码更加利于理解和维护，以及未来在其他业务场景中复用它的可能性。</p><p>但主要还是为了可维护性，把繁杂的代码拆分为更小粒度的代码块，用合适的名称命名组件，都有利于团队成员维护这块代码。</p></div><h3 id="功能点二-账号新增" tabindex="-1"><a class="header-anchor" href="#功能点二-账号新增" aria-hidden="true">#</a> 功能点二：账号新增</h3><p>用户在使用过程中会新增云平台账号，我们需要采集用户所填写的信息然后发送请求将数据传给后端，这里我们采用<code>modal+form</code>的形式。</p><p>注意组件重要参数：</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token punctuation">{</span>
  <span class="token comment">/* Accounts/components/AccountsModelForm.tsx */</span>
<span class="token punctuation">}</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span>
  <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span>
  <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>open<span class="token punctuation">}</span></span>
  <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>width <span class="token operator">?</span> width <span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">}</span></span>
  <span class="token attr-name">onOk</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> form<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token comment">//弹窗确认触发form表单校验</span>
  <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onCancel<span class="token punctuation">}</span></span>
  <span class="token attr-name">destroyOnClose</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span> <span class="token comment">//关闭弹窗销毁组件</span>
  <span class="token attr-name">bodyStyle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span>
    <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span>
    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>basic<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">labelCol</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> span<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">wrapperCol</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> span<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> maxWidth<span class="token operator">:</span> <span class="token number">550</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">initialValues</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>values<span class="token punctuation">}</span></span>
    <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onFinish<span class="token punctuation">}</span></span>
    <span class="token attr-name">autoComplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>off<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>type <span class="token operator">===</span> <span class="token string">&#39;show&#39;</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">preserve</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token comment">//重要，关闭弹窗销毁组件的同时销毁form实例</span>
  <span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token punctuation">{</span><span class="token comment">/* form表单内容 */</span><span class="token punctuation">}</span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="功能点三-账号修改" tabindex="-1"><a class="header-anchor" href="#功能点三-账号修改" aria-hidden="true">#</a> 功能点三：账号修改</h3><p>与功能点二共用一个组件，区别在于在弹窗确认后根据指示参数的不同发送不同的请求</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token punctuation">{</span>
  <span class="token comment">/* 表单弹窗 */</span>
<span class="token punctuation">}</span>
<span class="token operator">&lt;</span>AccountsModelForm
  open<span class="token operator">=</span><span class="token punctuation">{</span>newRuleFormOpen<span class="token punctuation">}</span>
  onCancel<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setNewRuleFormOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
  onFinish<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>modelTitle <span class="token operator">===</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> success <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">addList</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;添加账号成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setNewRuleFormOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getListData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>modelTitle <span class="token operator">===</span> <span class="token string">&#39;edit&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> success <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">editList</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>value<span class="token punctuation">,</span> id<span class="token operator">:</span> values<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;修改账号成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setNewRuleFormOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getListData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">setNewRuleFormOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">}</span>
  width<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">700</span><span class="token punctuation">}</span>
  title<span class="token operator">=</span><span class="token punctuation">{</span>modelTitleList<span class="token punctuation">[</span>modelTitle<span class="token punctuation">]</span><span class="token punctuation">}</span>
  type<span class="token operator">=</span><span class="token punctuation">{</span>modelTitle<span class="token punctuation">}</span>
  values<span class="token operator">=</span><span class="token punctuation">{</span>values<span class="token punctuation">}</span>
<span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="功能点四-账号删除" tabindex="-1"><a class="header-anchor" href="#功能点四-账号删除" aria-hidden="true">#</a> 功能点四：账号删除</h3><p>账号删除为封装在卡片上的单独按钮控制，注意重要操作需要二次确认。</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">const</span> <span class="token function-variable function">delFun</span> <span class="token operator">=</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  Modal<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;是否确定删除该账号&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onOk</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> success <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">delList</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;删除账号成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getListData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h2><p>以上就是这篇文章的所有内容，希望这篇文章能够帮助到你！</p><h2 id="source-·-demo" tabindex="-1"><a class="header-anchor" href="#source-·-demo" aria-hidden="true">#</a> Source · Demo</h2>`,34),r={href:"https://github.com/digitalchina-frontend/matrix-admin/tree/main/domains/cloud/cloud-admin-react",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"参考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),s(" 参考")],-1),d={href:"https://ant.design/index-cn",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const a=e("ExternalLinkIcon");return c(),o("div",null,[u,n("ul",null,[n("li",null,[s("Source："),n("a",r,[s("GitHub"),t(a)])])]),k,n("ul",null,[n("li",null,[n("a",d,[s("Ant Design 官方文档"),t(a)])])])])}const h=p(i,[["render",v],["__file","MA001.html.vue"]]);export{h as default};
